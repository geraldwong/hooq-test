{"version":3,"sources":["images/image_template.jpg","images/logo.png","components/collapsible.js","components/episodedetails.js","components/detailsbundle.js","components/show.js","components/cataloguebundle.js","components/site.js","index.js"],"names":["module","exports","__webpack_require__","p","Collapsible","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","open","togglePanel","bind","assertThisInitialized","e","setState","_this2","react_default","a","createElement","className","onClick","title","children","React","Component","EpisodeDetails","collapsible_Collapsible","concat","episodeNumber","episodeTitle","episodeSynopsis","DetailsBundle","detailsbundle_Details","data","focusedData","handleClick","Details","changeSeason","newSeason","console","log","currentSeason","getEpisodesDetails","id","getBasicShowDetails","url","tempNumberOfSeasons","tempNumberOfEpisodes","tempGenres","tempCast","fetch","then","res","json","genres","map","info","push","name","credits","cast","actor","number_of_episodes","number_of_seasons","numberOfSeasons","numberOfEpisodes","catch","err","tempEpisodes","episodes","episode","episode_number","overview","tempNumOfSeasonsArray","Array","from","length","v","k","numberOfSeasonsArray","urlPoster","poster","template","src","alt","synopsis","seasonNum","key","show","episodedetails_EpisodeDetails","Show","CatalogueBundle","cataloguebundle_Catalogue","showsData","modifyIsFocused","Catalogue","urlInput","show_Show","Site","returnToHome","getShowData","showFocused","nextPage","isCurrentlyFocused","window","scroll","top","left","behavior","page","arguments","undefined","tempData","results","poster_path","backdrop","backdrop_path","onClickNextPageButton","onClickToReturn","isFocused","logo","detailsbundle_DetailsBundle","cataloguebundle_CatalogueBundle","ReactDOM","render","site_Site","document","getElementById"],"mappings":"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","file":"static/js/main.612b8337.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image_template.b0e4dcdf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.0388987f.png\";","import React from \"react\";\r\nimport \"../css/collapsible.css\"\r\n\r\nexport default class Collapsible extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        }\r\n        this.togglePanel = this.togglePanel.bind(this);\r\n    }\r\n\r\n    togglePanel(e){\r\n        this.setState({open: !this.state.open})\r\n    }\r\n\r\n    componentDidUpdate(){\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='wrapper'>\r\n                <div onClick={(e)=>this.togglePanel(e)} className='header'>\r\n                    {this.props.title}\r\n                </div>\r\n                {this.state.open ? (\r\n                        <div className='content'>\r\n                            {this.props.children}\r\n                        </div>)\r\n                    :\r\n                    null\r\n                }\r\n            </div>);\r\n    }\r\n}","import React from \"react\";\r\nimport Collapsible from \"./collapsible\";\r\n\r\nexport default class EpisodeDetails extends React.Component {\r\n    render() {\r\n        return (\r\n            <Collapsible title={`${this.props.episodeNumber}. ${this.props.episodeTitle}`}>\r\n                <p>{this.props.episodeSynopsis}</p>\r\n            </Collapsible>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport template from \"../images/image_template.jpg\";\r\nimport EpisodeDetails from \"./episodedetails\"\r\n\r\nexport default class DetailsBundle extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Details data={this.props.focusedData}/>\r\n                <button onClick={this.props.handleClick}\r\n                >\r\n                    Go back to List\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Details extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            numberOfSeasons: null,\r\n            numberOfEpisodes: null,\r\n            numberOfSeasonsArray: [],\r\n            genres: [],\r\n            cast: [],\r\n            episodes: [],\r\n            currentSeason: 1\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let urlPoster = `https://image.tmdb.org/t/p/w500${this.props.data.poster}`;\r\n        if (this.props.data.poster == null) {\r\n            urlPoster = template;\r\n        }\r\n        return (\r\n            <div className='details-wrapper'>\r\n                <div className='details-row-wrapper'>\r\n                    <div className='poster-wrapper'>\r\n                        <img src={urlPoster} alt='tv show poster 2' />\r\n                    </div>\r\n                    <div className='details-headers'>\r\n                        <p className='show-title'>{this.props.data.title}</p>\r\n                        <p className='show-episodes-info'>{`${this.state.numberOfSeasons} Seasons, ${this.state.numberOfEpisodes} Episodes`}</p>\r\n                        <p className='show-genre'>{this.state.genres}</p>\r\n                    </div>\r\n                </div>\r\n                <p className='show-cast'>\r\n                    {`Cast: ${this.state.cast}`}\r\n                </p>\r\n                <p className='show-desc'>\r\n                    {this.props.data.synopsis}\r\n                </p>\r\n\r\n                <div className=\"episodes-wrapper\">\r\n                    <div className='seasons-wrapper'>\r\n                        <p>Seasons:\r\n                            {this.state.numberOfSeasonsArray.map((seasonNum) => {\r\n                                if (this.state.currentSeason === seasonNum) {\r\n                                    return (\r\n                                        <span className='season-wrapper-focused' key={seasonNum}\r\n                                              onClick={() => this.changeSeason(seasonNum)}> {seasonNum} </span>\r\n                                    );\r\n                                } else {\r\n                                    return (\r\n                                        <span className='season-wrapper' key={seasonNum}\r\n                                              onClick={() => this.changeSeason(seasonNum)}> {seasonNum} </span>\r\n                                    );\r\n                                }\r\n                            })}\r\n                        </p>\r\n                    </div>\r\n\r\n                    {this.state.episodes.map((show) => {\r\n                        return <EpisodeDetails key={show.episodeNumber} episodeNumber={show.episodeNumber} episodeTitle={show.episodeTitle} episodeSynopsis={show.episodeSynopsis}/>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getBasicShowDetails(`https://api.themoviedb.org/3/tv/${this.props.data.id}?api_key=1cde70c7c55464eecfb2a321de1392af&append_to_response=credits`);\r\n        this.getEpisodesDetails(`https://api.themoviedb.org/3/tv/${this.props.data.id}/season/${this.state.currentSeason}?api_key=1cde70c7c55464eecfb2a321de1392af&append_to_response=credits`);\r\n    }\r\n\r\n    changeSeason = (newSeason) => {\r\n        console.log('Changing season');\r\n        const previousSeason = this.state.currentSeason;\r\n        this.setState({\r\n            currentSeason: newSeason\r\n        });\r\n        this.getEpisodesDetails(`https://api.themoviedb.org/3/tv/${this.props.data.id}/season/${newSeason}?api_key=1cde70c7c55464eecfb2a321de1392af&append_to_response=credits`)\r\n    }\r\n\r\n    getBasicShowDetails = (url) => {\r\n        console.log('In get show details');\r\n        let tempNumberOfSeasons = null,\r\n            tempNumberOfEpisodes = null,\r\n            tempGenres= [],\r\n            tempCast = []\r\n        fetch(url).then(res => res.json().then(data => {\r\n            console.log(data);\r\n            data.genres.map((info) => {\r\n                tempGenres.push(info.name);\r\n            });\r\n            data.credits.cast.map((actor) => {\r\n                tempCast.push(actor.name);\r\n            });\r\n            tempNumberOfEpisodes = data.number_of_episodes;\r\n            tempNumberOfSeasons = data.number_of_seasons;\r\n            this.setState({\r\n                genres: tempGenres,\r\n                numberOfSeasons: tempNumberOfSeasons,\r\n                numberOfEpisodes: tempNumberOfEpisodes,\r\n                cast: tempCast\r\n            });\r\n        })).catch(err => console.log('Error occurred getting basic show details, with error:' + err));\r\n    }\r\n\r\n    getEpisodesDetails = (url) => {\r\n        console.log('In get episodes details');\r\n        let tempEpisodes = []\r\n        fetch(url).then(res => res.json().then(data => {\r\n            data.episodes.map((episode) => {\r\n                tempEpisodes.push({\r\n                    episodeNumber: episode.episode_number,\r\n                    episodeTitle: episode.name,\r\n                    episodeSynopsis: episode.overview\r\n                });\r\n            });\r\n            const tempNumOfSeasonsArray = Array.from({length: this.state.numberOfSeasons}, (v, k) => k+1);\r\n            this.setState({\r\n                numberOfSeasonsArray: tempNumOfSeasonsArray,\r\n                episodes: tempEpisodes\r\n            });\r\n        })).catch(err => console.log('Error occurred getting episodes, with error:' + err));\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default class Show extends  React.Component {\r\n    render() {\r\n        return (\r\n            <div className='show-wrapper'>\r\n                <img src={this.props.url} key={this.props.id} alt='tv show poster'\r\n                     onClick={() => {\r\n                         this.props.handleClick(this.props.data);\r\n                     }\r\n                     }/>\r\n                <p className='show-title-catalogue'>{this.props.data.title}</p>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport Show from \"./show\"\r\nimport template from \"../images/image_template.jpg\";\r\n\r\nexport default class CatalogueBundle extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Catalogue showsData={this.props.showsData} handleClick={this.props.modifyIsFocused}/>\r\n                <button className='next-page' onClick={this.props.handleClick}\r\n                >\r\n                    Next Page\r\n                </button>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nclass Catalogue extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            handleClick: null\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='catalogue-wrapper'>\r\n                {this.props.showsData.map((show) => {\r\n                    var urlInput = `https://image.tmdb.org/t/p/w500${show.poster}`;\r\n                    if (show.poster == null) {\r\n                        urlInput = template;\r\n                    }\r\n                    return (\r\n                        <Show key={show.id}  id={show.id} url={urlInput} data={show} handleClick={this.state.handleClick}/>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            handleClick: this.props.handleClick\r\n        });\r\n    }\r\n}","import React from \"react\";\r\nimport DetailsBundle from \"./detailsbundle\"\r\nimport CatalogueBundle from \"./cataloguebundle\";\r\nimport logo from \"../images/logo.png\";\r\n\r\nexport default class Site extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showsData: [],\r\n            nextPage: 2,\r\n            showFocused: false,\r\n            focusedData: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='site-wrapper'>\r\n                <img className='site-header' src={logo} alt='TV Shows' onClick={this.returnToHome}/>\r\n                {this.state.showFocused ?\r\n                    <DetailsBundle\r\n                        focusedData={this.state.focusedData}\r\n                        handleClick={this.onClickToReturn}  />\r\n                    :\r\n                    <CatalogueBundle\r\n                        showsData={this.state.showsData}\r\n                        modifyIsFocused={this.modifyIsFocused}\r\n                        handleClick={this.onClickNextPageButton}/>}\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getShowData('https://api.themoviedb.org/3/discover/tv?api_key=1cde70c7c55464eecfb2a321de1392af&sort_by=popularity.desc');\r\n    }\r\n\r\n    returnToHome = () => {\r\n        this.getShowData('https://api.themoviedb.org/3/discover/tv?api_key=1cde70c7c55464eecfb2a321de1392af&sort_by=popularity.desc');\r\n        this.setState( {\r\n            showFocused: false,\r\n            nextPage: 2\r\n        });\r\n    }\r\n\r\n    modifyIsFocused = (data) => {\r\n        const isCurrentlyFocused = this.state.showFocused;\r\n        window.scroll({top: 0, left: 0, behavior: \"auto\"});\r\n        this.setState({\r\n            showFocused: !isCurrentlyFocused,\r\n            focusedData: data\r\n        });\r\n    };\r\n\r\n    getShowData = (url, page = 1) => {\r\n        const pageString = '&page=';\r\n        console.log('In get show data');\r\n        let tempData = []\r\n        fetch(url + pageString + page).then(res => res.json().then(data => {\r\n            data.results.map(show => {\r\n                tempData.push({\r\n                    id: show.id,\r\n                    title: show.name,\r\n                    poster: show.poster_path,\r\n                    backdrop: show.backdrop_path,\r\n                    synopsis: show.overview\r\n                });\r\n            });\r\n            this.setState({\r\n                showsData: tempData\r\n            });\r\n        })).catch(err => console.log('Error occurred getting movies, with error:' + err));\r\n    }\r\n\r\n    onClickNextPageButton = () => {\r\n        const page = this.state.nextPage;\r\n        window.scroll({top: 0, left: 0, behavior: \"auto\"});\r\n        this.getShowData('https://api.themoviedb.org/3/discover/tv?api_key=1cde70c7c55464eecfb2a321de1392af&sort_by=popularity.desc', page);\r\n        this.setState({\r\n            nextPage: page + 1\r\n        });\r\n    }\r\n\r\n    onClickToReturn = () =>  {\r\n        const isFocused = this.state.showFocused;\r\n        this.setState({\r\n            showFocused: !isFocused\r\n        });\r\n    }\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport './css/index.css';\r\nimport Site from \"./components/site\"\r\n\r\nReactDOM.render(\r\n    <Site />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}